(ns lounge.vault
  (:require [castra.core :refer [mkremote]]))

(defc status         {:initialized false :sealed true :standby true})
(defc token          nil)
(defc keyshards      nil)
(defc error          nil)
(defc loading        nil)

(defc= init?         (:initialized status))
(defc= sealed?       (:sealed      status))
(defc= token-nil?    (nil? token))
(defc= error-message (when error (.-message error)))
(defc= error-stack   (when error (.-serverStack error)))
(defc= loading?      (not (empty? (seq loading))))

(def status!         (mkremote 'lounge.vault/status  status    error loading))
(def init!           (mkremote 'lounge.vault/init    keyshards error loading))
(def auth!           (mkremote 'lounge.vault/auth    token     error loading))
(def unauth!         (mkremote 'lounge.vault/unauth  token     error loading))

(cell= (println "[vault:token]"  token token-nil?)
       (println "[vault:status]" status))
